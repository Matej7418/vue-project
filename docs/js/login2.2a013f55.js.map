{"version":3,"file":"js/login2.2a013f55.js","mappings":"sdAMM,QAAEA,IAAYC,EAAAA,EAAAA,IAAOC,GAErBC,GAAUC,EAAAA,EAAAA,KAAI,GACdC,GAAWD,EAAAA,EAAAA,IAAI,IACfE,GAAUF,EAAAA,EAAAA,IAAI,IACdG,GAAaH,EAAAA,EAAAA,IAAI,IAMvBI,eAAeC,IACb,IACEN,EAAQO,OAAQ,EAChB,MAAM,KAAEC,GAASX,EAAQU,MAEzB,IAAI,KAAEE,EAAI,MAAEC,EAAK,OAAEC,SAAiBC,EAAAA,EAAAA,KAC1B,YACLC,OAAQ,iCACRC,GAAG,KAAMN,EAAKO,IACdC,SAEL,GAAIN,GAAoB,MAAXC,EAAgB,MAAMD,EAE/BD,IACFP,EAASK,MAAQE,EAAKP,SACtBC,EAAQI,MAAQE,EAAKN,QACrBC,EAAWG,MAAQE,EAAKL,WAM5B,CAJE,MAAOM,GACPO,MAAMP,EAAMQ,QACd,CAAE,QACAlB,EAAQO,OAAQ,CAClB,CACF,CAEAF,eAAec,IACb,IACEnB,EAAQO,OAAQ,EAChB,MAAM,KAAEC,GAASX,EAAQU,MAEnBa,EAAU,CACdL,GAAIP,EAAKO,GACTb,SAAUA,EAASK,MACnBJ,QAASA,EAAQI,MACjBH,WAAYA,EAAWG,MACvBc,WAAY,IAAIC,MAGlB,IAAI,MAAEZ,SAAgBE,EAAAA,EAAAA,KAAc,YAAYW,OAAOH,GAEvD,GAAIV,EAAO,MAAMA,CAKnB,CAJE,MAAOA,GACPO,MAAMP,EAAMQ,QACd,CAAE,QACAlB,EAAQO,OAAQ,CAClB,CACF,CAEAF,eAAemB,IACb,IACExB,EAAQO,OAAQ,EAChB,IAAI,MAAEG,SAAgBE,EAAAA,EAAAA,KAAAA,UACtB,GAAIF,EAAO,MAAMA,CAKnB,CAJE,MAAOA,GACPO,MAAMP,EAAMQ,QACd,CAAE,QACAlB,EAAQO,OAAQ,CAClB,CACF,C,OA9DAkB,EAAAA,EAAAA,KAAU,KACRnB,GAAY,I,ywBCXd,MAAM,EAAc,EAEpB,Q,sPCDA,MAAMN,GAAUC,EAAAA,EAAAA,KAAI,GACdyB,GAAQzB,EAAAA,EAAAA,IAAI,IAEZ0B,EAActB,UAClB,IACEL,EAAQO,OAAQ,EAChB,MAAM,MAAEG,SAAgBE,EAAAA,EAAAA,KAAAA,cAA4B,CAClDc,MAAOA,EAAMnB,QAEf,GAAIG,EAAO,MAAMA,EACjBO,MAAM,uCAOR,CANE,MAAOP,GACHA,aAAiBkB,OACnBX,MAAMP,EAAMQ,QAEhB,CAAE,QACAlB,EAAQO,OAAQ,CAClB,G,idClBF,MAAM,EAAc,EAEpB,Q,iGCCA,MAAMV,GAAUI,EAAAA,EAAAA,M,OAEhBwB,EAAAA,EAAAA,KAAU,KACRb,EAAAA,EAAAA,KAAAA,aAA2BiB,MAAK,EAAGpB,WACjCZ,EAAQU,MAAQE,EAAKZ,OAAO,IAG9Be,EAAAA,EAAAA,KAAAA,mBAAgC,CAACkB,EAAGC,KAClClC,EAAQU,MAAQwB,CAAQ,GACxB,I,uJCZJ,MAAM,EAAc,EAEpB,O","sources":["webpack://chat/./src/components/Account.vue","webpack://chat/./src/components/Account.vue?5e23","webpack://chat/./src/components/Auth.vue","webpack://chat/./src/components/Auth.vue?4730","webpack://chat/./src/views/Login2View.vue","webpack://chat/./src/views/Login2View.vue?6e32"],"sourcesContent":["<script setup>\r\nimport { supabase } from '@/supabase'\r\nimport { onMounted, ref, toRefs, defineProps } from 'vue'\r\nimport Avatar from './Avatar.vue'\r\n\r\nconst props = defineProps(['session'])\r\nconst { session } = toRefs(props)\r\n\r\nconst loading = ref(true)\r\nconst username = ref('')\r\nconst website = ref('')\r\nconst avatar_url = ref('')\r\n\r\nonMounted(() => {\r\n  getProfile()\r\n})\r\n\r\nasync function getProfile() {\r\n  try {\r\n    loading.value = true\r\n    const { user } = session.value\r\n\r\n    let { data, error, status } = await supabase\r\n        .from('profiles')\r\n        .select(`username, website, avatar_url`)\r\n        .eq('id', user.id)\r\n        .single()\r\n\r\n    if (error && status !== 406) throw error\r\n\r\n    if (data) {\r\n      username.value = data.username\r\n      website.value = data.website\r\n      avatar_url.value = data.avatar_url\r\n    }\r\n  } catch (error) {\r\n    alert(error.message)\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\nasync function updateProfile() {\r\n  try {\r\n    loading.value = true\r\n    const { user } = session.value\r\n\r\n    const updates = {\r\n      id: user.id,\r\n      username: username.value,\r\n      website: website.value,\r\n      avatar_url: avatar_url.value,\r\n      updated_at: new Date(),\r\n    }\r\n\r\n    let { error } = await supabase.from('profiles').upsert(updates)\r\n\r\n    if (error) throw error\r\n  } catch (error) {\r\n    alert(error.message)\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\nasync function signOut() {\r\n  try {\r\n    loading.value = true\r\n    let { error } = await supabase.auth.signOut()\r\n    if (error) throw error\r\n  } catch (error) {\r\n    alert(error.message)\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <form class=\"form-widget\" @submit.prevent=\"updateProfile\">\r\n    <div>\r\n      <label for=\"email\">Email</label>\r\n      <input id=\"email\" type=\"text\" :value=\"session.user.email\" disabled />\r\n    </div>\r\n    <div>\r\n      <label for=\"username\">Name</label>\r\n      <input id=\"username\" type=\"text\" v-model=\"username\" />\r\n    </div>\r\n    <div>\r\n      <label for=\"website\">Website</label>\r\n      <input id=\"website\" type=\"website\" v-model=\"website\" />\r\n    </div>\r\n\r\n    <div>\r\n      <input\r\n          type=\"submit\"\r\n          class=\"button primary block\"\r\n          :value=\"loading ? 'Loading ...' : 'Update'\"\r\n          :disabled=\"loading\"\r\n      />\r\n    </div>\r\n\r\n    <div>\r\n      <button class=\"button block\" @click=\"signOut\" :disabled=\"loading\">Sign Out</button>\r\n    </div>\r\n  </form>\r\n</template>\r\n","import script from \"./Account.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Account.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nimport { ref } from 'vue'\r\nimport { supabase } from '@/supabase'\r\n\r\nconst loading = ref(false)\r\nconst email = ref('')\r\n\r\nconst handleLogin = async () => {\r\n  try {\r\n    loading.value = true\r\n    const { error } = await supabase.auth.signInWithOtp({\r\n      email: email.value,\r\n    })\r\n    if (error) throw error\r\n    alert('Check your email for the login link!')\r\n  } catch (error) {\r\n    if (error instanceof Error) {\r\n      alert(error.message)\r\n    }\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <form class=\"row flex-center flex\" @submit.prevent=\"handleLogin\">\r\n    <div class=\"col-6 form-widget\">\r\n      <h1 class=\"header\">Supabase + Vue 3</h1>\r\n      <p class=\"description\">Sign in via magic link with your email below</p>\r\n      <div>\r\n        <input class=\"inputField\" type=\"email\" placeholder=\"Your email\" v-model=\"email\" />\r\n      </div>\r\n      <div>\r\n        <input\r\n            type=\"submit\"\r\n            class=\"button block\"\r\n            :value=\"loading ? 'Loading' : 'Send magic link'\"\r\n            :disabled=\"loading\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </form>\r\n</template>\r\n","import script from \"./Auth.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Auth.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nimport { onMounted, ref } from 'vue'\r\nimport Account from '@/components/Account.vue'\r\nimport Auth from '@/components/Auth.vue'\r\nimport { supabase } from '@/supabase'\r\n\r\nconst session = ref()\r\n\r\nonMounted(() => {\r\n  supabase.auth.getSession().then(({ data }) => {\r\n    session.value = data.session\r\n  })\r\n\r\n  supabase.auth.onAuthStateChange((_, _session) => {\r\n    session.value = _session\r\n  })\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"container\" style=\"padding: 50px 0 100px 0\">\r\n    <Account v-if=\"session\" :session=\"session\" />\r\n    <Auth v-else />\r\n  </div>\r\n</template>","import script from \"./Login2View.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Login2View.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["session","toRefs","props","loading","ref","username","website","avatar_url","async","getProfile","value","user","data","error","status","supabase","select","eq","id","single","alert","message","updateProfile","updates","updated_at","Date","upsert","signOut","onMounted","email","handleLogin","Error","then","_","_session"],"sourceRoot":""}